#!/usr/bin/env node

!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=12)}([function(e,t){e.exports=require("socket.io-stream")},function(e,t){e.exports=require("bunyan")},function(e,t){e.exports=require("highlight.js")},function(e,t){e.exports=require("minimist")},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("socket.io")},function(e,t){e.exports=require("ioredis")},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("markdown-it")},function(e,t){e.exports=require("es6-promisify")},function(e,t,n){e.exports=n(13)},function(e,t,n){"use strict";n.r(t);var r=n(3),s=n.n(r),i=n(4),o=n.n(i),a=n(5),c=n.n(a),u=n(6),l=n.n(u),d=n(0),p=n.n(d),f=n(1),m=n.n(f),g=n(7),h=n.n(g),y=n(8),x=n.n(y),v={stringToHash(e){const t=x.a.createHash("md5");return t.update(e),t.digest("hex")}},w={filepath:process.env.TXR_PATH||process.env["win32"==process.platform?"USERPROFILE":"HOME"],server:{port:process.env.PORT||8e3,web_conc:process.env.WEB_CONCURRENCY||1,host:process.env.TXR_HOST||"https://txr.euphoritech.com"},redis:{url:process.env.REDIS_URL||"redis://localhost:6379"},logger:{options:{name:process.env.APP_NAME||"txr",level:process.env.LOGGING_LEVEL||"info",stream:process.stdout}}};const b=m.a.createLogger(w.logger.options);var O=n(9),k=n.n(O),S=n(2),$=n.n(S),_=n(10),j=n.n(_),T=n(11),N=n.n(T);const P=new j.a({highlight:function(e,t){if(t&&$.a.getLanguage(t))try{return`<pre class="hljs"><code>${$.a.highlight(t,e,!0).value}</code></pre>`}catch(e){}return""}}),E=N()(k.a.readFile);var R={getFileName(e,t=Date.now()){const n=e.lastIndexOf("."),r=e.substring(n);return`${e.substring(0,n)}_${t}${r}`},expressjs:{async convertReadmeToHtml(e){const t=await E("README.md","utf8"),n=P.render(t);return e.send(this.createHtmlPage(n))},createHtmlPage:e=>`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n            <title>txr - Transfer Files to Friends</title>\n\n            <style>\n              body {\n                font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;\n              }\n\n              a {\n                color: inherit;\n              }\n\n              pre.hljs {\n                border-radius: 5px;\n                border: 1px solid #a0a0a0;\n                background: #f5f5f5;\n                overflow-x: scroll;\n                padding: 5px;\n              }\n\n              .container {\n                max-width: 700px;\n                margin-right: auto;\n                margin-left: auto;\n              }\n\n              .notice {\n                border-radius: 5px;\n                border: 1px solid #a0a0a0;\n                background: #28a745;\n                color: white;\n                padding: 15px;\n                margin: 25px 0px;\n              }\n            </style>\n          </head>\n\n          <body>\n            <div class="container">\n              <div class="notice">\n                You navigated to a txr server to transfer files easily to and\n                from machines/servers. Learn more below or by visiting\n                <a href="https://github.com/whatl3y/txr">https://github.com/whatl3y/txr</a>\n              </div>\n              ${e}\n            </div>\n          </body>\n        </html>\n      `}},q={paginateArray(e,t=9e7,n=1){const r=t*(n-1);if(e instanceof Array){const s=e.length;return{data:e.slice(r,r+t),number_of_pages:Math.ceil(s/t),current_page:n,data_length:s}}if("object"==typeof e&&null!=e){const i=e,o=Object.keys(i).sort(),a=o.length,c=o.slice(r,r+t);let u={};for(var s=0;s<c.length;s++)u[c[s]]=i[c[s]];return{data:u,number_of_pages:Math.ceil(a/t),current_page:n,data_length:a}}return e}};function H(){return{app:{names:{},ids:{},auth:{},unlocked:{}},async set(e,t,n){return this.app[e][t]=n},async get(e,t=null){return t?this.app[e][t]:this.app[e]},async del(e,t){delete this.app[e][t]}}}var M={memory:H,redis:function(e){return{async set(t,n,r){let s=JSON.parse(await e.get(`txr.${t}`)||"{}");return s[n]=r,await e.set(`txr.${t}`,JSON.stringify(s)),r},async get(t,n=null){const r=JSON.parse(await e.get(`txr.${t}`)||"{}");return n?r[n]:r},async del(t,n){let r=JSON.parse(await e.get(`txr.${t}`)||"{}");delete r[n],await e.set(`txr.${t}`,JSON.stringify(r))},flush:async(t=Object.keys(H().app))=>await Promise.all(t.map(async t=>{await e.del(`txr.${t}`)}))}}};function A(e,{type:t}={}){const n=function e(t){switch(t){case"memory":return M.memory();case"redis":return M.redis(new h.a(w.redis.url));default:return e("memory")}}(t),r=c()(),s=o.a.Server(r),i=m.a.createLogger(w.logger.options),a=l()(s),u=function({app:e}){return{async"/clients"(t,n){const r=q.paginateArray(Object.keys(await e.get("names")));n.json(r)},"*"(e,t){R.expressjs.convertReadmeToHtml(t)}}}({app:n});return a.on("connection",function(e){i.info(`got socket: ${e.id}`);const t=p()(e),r=function(e,t,n){return{normal:{"txr-regiser-listen":async function({auth:e,user:r}){await n.get("names",r)?(t.emit("txr-user-taken",!0),b.error(`User could not register name: ${r}`)):(await Promise.all([n.set("names",r,t.id),n.set("ids",t.id,r),n.set("auth",t.id,!!e)]),t.emit("txr-user-registered-success",r),b.info(`User successfully registered name: ${r}`))},"txr-send-file-check-auth":async function({filename:r,filesizebytes:s,user:i}){const o=await n.get("names",i),a=await n.get("auth",o),c=v.stringToHash(JSON.stringify({filename:r,filesizebytes:s,user:i}));if(i&&o){const u=e.sockets.connected[o];a?(t.emit("txr-file-permission-waiting"),u.on("file-permission-response",async e=>{"yes"===e.toLowerCase()?(await n.set("unlocked",c,t.id),t.emit("txr-file-permission-granted")):t.emit("txr-file-permission-denied")}),u.emit("txr-file-permission",{filename:r,filesizebytes:s,user:i})):(await n.set("unlocked",c,t.id),t.emit("txr-file-permission-granted"))}else b.error(`Tried to send a file to '${i}' who has not registered.`),t.emit("txr-no-user",{user:i})},"txr-send-chat-message":async function({targetUser:r,user:s,message:i}){const o=await n.get("names",r);if(!o)return t.emit("txr-destination-user-not-registered",r);e.sockets.connected[o].emit("txr-receive-chat-message",{targetUser:s,message:i})},"txr-reply-to-chat-message":async function({user:r,replyMessage:s}){const[i,o]=await Promise.all([n.get("ids",t.id),n.get("names",r)]);o&&e.sockets.connected[o].emit("txr-receive-reply",{user:i,replyMessage:s})},disconnect:async function(){b.info(`socket disconnected: ${t.id}`);const e=await n.get("ids",t.id);await Promise.all([n.del("ids",t.id),n.del("auth",t.id),n.del("names",e)])}},stream:{"txr-upload":async function(r,s){b.info(`Received 'upload' event with data: ${JSON.stringify(s)}`);const i=s.user,o=await n.get("names",i),a=v.stringToHash(JSON.stringify(s));if(i&&o){const i=await n.get("unlocked",a);if(i&&i==t.id){const n=e.sockets.connected[o],i=p.a.createStream();r.on("data",e=>b.info(`Received ${e.length} bytes of data.`)),r.on("error",e=>b.error(`socket: ${t.id}`,e)),r.on("end",()=>b.info(`Completed receiving file with data: ${JSON.stringify(s)}!`)),i.on("end",()=>t.emit("txr-finished-uploading")),r.pipe(i),p()(n).emit("txr-file",i,s)}else t.emit("txr-file-data-hash-mismatch");await n.del("unlocked",a)}else b.error(`Tried to send a file to '${i}' who has not registered.`),t.emit("txr-no-user",{user:i})}}}}(a,e,n);Object.keys(r.normal).forEach(t=>e.on(t,r.normal[t])),Object.keys(r.stream).forEach(e=>t.on(e,r.stream[e]))}),Object.keys(u).forEach(e=>r.get(e,u[e])),s.listen(e,()=>i.info(`server listening on *: ${e}`)),{app:r,httpServer:s,socketApp:n}}const L=()=>{},J=s()(process.argv.slice(2)),C=J.t||J.type||"memory";let I=J.p||J.port||w.server.port;async function U(e=L){"function"==typeof e&&await e(),process.exit()}I=isNaN(I)?w.server.port:I,async function(){const{socketApp:e}=await A(I,{type:C});process.on("SIGINT",()=>U(e.flush)),process.on("SIGTERM",()=>U(e.flush))}()}]);