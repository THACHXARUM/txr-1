#!/usr/bin/env node

!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=8)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={filepath:process.env.TXR_PATH||process.env["win32"==process.platform?"USERPROFILE":"HOME"],server:{port:process.env.PORT||8e3,web_conc:process.env.WEB_CONCURRENCY||1,host:process.env.TXR_HOST||"https://txr.euphoritech.com"},logger:{options:{name:process.env.APP_NAME||"txr",level:process.env.LOGGING_LEVEL||"info",stream:process.stdout}}}},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("socket.io-client")},function(e,t){e.exports=require("socket.io-stream")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("es6-promisify")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(1)),s=o(r(17)),i=o(r(18)),a=o(r(5));function o(e){return e&&e.__esModule?e:{default:e}}const l=new i.default({highlight:function(e,t){if(t&&s.default.getLanguage(t))try{return`<pre class="hljs"><code>${s.default.highlight(t,e,!0).value}</code></pre>`}catch(e){}return""}}),u=(0,a.default)(n.default.readFile);t.default={getFileName(e,t=Date.now()){const r=e.lastIndexOf("."),n=e.substring(r);return`${e.substring(0,r)}_${t}${n}`},expressjs:{async convertReadmeToHtml(e){const t=await u("README.md","utf8"),r=l.render(t);return e.send(this.createHtmlPage(r))},createHtmlPage:e=>`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n            <title>txr - Transfer Files to Friends</title>\n\n            <style>\n              body {\n                font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;\n              }\n\n              a {\n                color: inherit;\n              }\n\n              pre.hljs {\n                border-radius: 5px;\n                border: 1px solid #a0a0a0;\n                background: #f5f5f5;\n                overflow-x: scroll;\n                padding: 5px;\n              }\n\n              .container {\n                max-width: 700px;\n                margin-right: auto;\n                margin-left: auto;\n              }\n\n              .notice {\n                border-radius: 5px;\n                border: 1px solid #a0a0a0;\n                background: #28a745;\n                color: white;\n                padding: 15px;\n                margin: 25px 0px;\n              }\n            </style>\n          </head>\n\n          <body>\n            <div class="container">\n              <div class="notice">\n                You navigated to a txr server to transfer files easily to and\n                from machines/servers. Learn more below or by visiting\n                <a href="https://github.com/whatl3y/txr">https://github.com/whatl3y/txr</a>\n              </div>\n              ${e}\n            </div>\n          </body>\n        </html>\n      `}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=r(19);(n=s)&&n.__esModule;t.default={twoLinesDifferentColors(e,t,r="blue",n="green"){this.wrapInNewlines(()=>{e.length>0&&console.log(e[r]),t.length>0&&console.log(t[n])})},singleLine(e,t="blue",r=1){this.wrapInNewlines(()=>console.log(e[t]),r)},success(e){this.wrapInNewlines(()=>console.log(e.green))},error(e){this.wrapInNewlines(()=>console.log(e.red))},progress(e){process.stdout.write(e)},chatMessage(e){this.wrapInNewlines(()=>console.log(e.cyan))},wrapInNewlines(e=(()=>{}),t=0){const r=t-1>0?new Array(t-1).fill("\n").join(""):"";t>0&&console.log(r),e(),t>0&&console.log(r)}}},function(e,t,r){e.exports=r(9)},function(e,t,r){"use strict";var n=i(r(10)),s=i(r(11));function i(e){return e&&e.__esModule?e:{default:e}}const a=(0,n.default)(process.argv.slice(2)),[o,l,u]=a._;!async function(){const e=a.c||a.command||o,t=a.f||a.file||a.d||a.dir||l,r=a.u||a.username||a.user||u||l,n=a.t||a.target_user||a.targetUser||u,i=a.a||a.auth,c=a.h||a.host;await(0,s.default)({typeInterface:"cli",command:e,file:t,user:r,targetUser:n,auth:i,host:c})}()},function(e,t){e.exports=require("minimist")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(12)),s=i(r(20));function i(e){return e&&e.__esModule?e:{default:e}}t.default=async function({typeInterface:e,command:t,file:r,user:i,targetUser:a,auth:o,host:l,logger:u,callback:c,reject:d,resolve:f}){if(!e||!s.default[e])throw new Error(`We don't recognize the interface provided: ${e}`);{const h=s.default[e];if(!t||!n.default[t])throw new Error(`We don't recognize the command provided: ${t}`);await n.default[t]({client:h,file:r,user:i,targetUser:a,auth:o,host:l,logger:u,callback:c,reject:d,resolve:f})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(13)),s=a(r(14)),i=a(r(15));function a(e){return e&&e.__esModule?e:{default:e}}t.default={chat:n.default,listen:s.default,send:i.default}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(2)),s=(i(r(3)),i(r(0)));function i(e){return e&&e.__esModule?e:{default:e}}t.default=async function({client:e,user:t,targetUser:r,host:i,reject:a,resolve:o}){const l=n.default.connect(i||s.default.server.host),u=e({socket:l,user:t,targetUser:r,host:i,reject:a,resolve:o});if(!t)return u.reject("Make sure you pass a user (-u or --username) to listen for files that could be sent to you.\n");if(!r)return u.reject("Make sure you pass a target user (-t or --target_user) to send chat messages to.\n");l.emit("txr-regiser-listen",{user:t});const c=u.chat;if(!c)return u.reject("The interface provided does not support the chat command.\n");const d=c.normal;Object.keys(d).forEach(e=>l.on(e,d[e].bind(c)))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(2)),s=a(r(3)),i=a(r(0));function a(e){return e&&e.__esModule?e:{default:e}}t.default=async function({client:e,file:t,user:r,auth:a,host:o,callback:l,reject:u,resolve:c}){const d=n.default.connect(o||i.default.server.host),f=e({socket:d,socketStream:s.default,file:t,user:r,auth:a,host:o,callback:l,reject:u,resolve:c});if(!r)return f.reject("Make sure you pass a user (-u or --username) to listen for files that could be sent to you.\n");d.emit("txr-regiser-listen",{user:r,auth:a});const h=f.listen,g=h.normal,p=h.stream;Object.keys(g).forEach(e=>d.on(e,g[e].bind(h))),Object.keys(p).forEach(e=>(0,s.default)(d).on(e,p[e].bind(h)))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(1)),s=f(r(4)),i=f(r(5)),a=f(r(2)),o=f(r(3)),l=f(r(16)),u=f(r(6)),c=f(r(7)),d=f(r(0));function f(e){return e&&e.__esModule?e:{default:e}}const h=(0,i.default)(n.default.access),g=(0,i.default)(n.default.lstat),p=(0,i.default)(n.default.writeFile),m=(0,i.default)(l.default);t.default=async function({client:e,file:t,user:r,host:i,reject:l,resolve:f}){const y=a.default.connect(i||d.default.server.host),v=o.default.createStream(),w=e({socket:y,socketStream:o.default,writeStream:v,file:t,user:r,host:i,reject:l,resolve:f}),x=t,b=r;if(!x)return w.reject("Make sure you pass an absolute filepath (-f or --file) to send a file.\n");if(!b)return w.reject("Make sure you pass a user (-u or --username) to send a file to.\n");if(!await(async e=>{try{return await h(x),!0}catch(e){return!1}})())return w.reject(`We couldn't find a file or directory located in the following location:\n${x}\n`);const _=await g(x),k=_.isDirectory(),j=_.isFile();let M,$,S,T=_.size;if(k)c.default.success(`We are zipping and sending the directory: ${x}. This may take some time depending on how large the directory is...`),M=await m(x),$=u.default.getFileName(`${x}.zip`),S=!0,T=`${T} (directory)`;else{if(!j)return w.reject(`The path specified is not a file or directory. The specified path needs to be a file or directory.\n${x}\n`);M=x,$=x}M instanceof Buffer&&await p($,M);const O={filename:s.default.basename($),filesizebytes:T,user:b};y.emit("txr-send-file-check-auth",O);const F=n.default.createReadStream($),P=w.send;P.finalFilename=$,P.dataForFileToSend=O,P.deleteFileAfterSend=S;const N=P.normal,E=P.stream;Object.keys(N).forEach(e=>y.on(e,N[e].bind(P))),Object.keys(E).forEach(e=>F.on(e,E[e].bind(P))),F.pipe(v)}},function(e,t){e.exports=require("zip-dir")},function(e,t){e.exports=require("highlight.js")},function(e,t){e.exports=require("markdown-it")},function(e,t){e.exports=require("colors")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(21)),s=i(r(24));function i(e){return e&&e.__esModule?e:{default:e}}t.default={cli:n.default,library:s.default}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function({socket:e,socketStream:t,writeStream:r,file:i,user:c,targetUser:g,auth:p,host:m,reject:y,resolve:v}){return{reject:y=y||f,resolve:v=v||h,chat:{readline:null,async waitAndSendMessage(){this.readline&&this.readline.close(),this.readline=(0,o.default)();const t=await this.readline.ask(`[${c}]: `);if(["end","exit","quit"].includes(t)&&(l.default.success("Goodbye!"),v()),0===t.length)return await this.waitAndSendMessage();e.emit("txr-send-chat-message",{user:c,targetUser:g,message:t}),await this.waitAndSendMessage()},normal:{"txr-user-taken":function(){y(`The user you chose, ${c}, is already registered with the server. Please try another username.`)},"txr-destination-user-not-registered":function(e){y(`(There is no user currently registered with the username ${e}.)`)},"txr-receive-chat-message":async function({targetUser:e,message:t}){l.default.chatMessage(`[${e}]: ${t}`),await this.waitAndSendMessage()},"txr-receive-reply":async function({user:e,replyMessage:t}){this.readline&&(this.readline.close(),this.readonly=null),l.default.chatMessage(`[${e}]: ${t}`),await this.waitAndSendMessage()},"txr-user-registered-success":async function(e){l.default.success(`Successfully registered name: ${e}. You can now send messages to ${g} below.\n`),l.default.success("(type 'exit' or 'quit' to stop sending messages)"),await this.waitAndSendMessage()}}},listen:{readline:null,async askToReply(t){this.readline&&this.readline.close(),this.readline=(0,o.default)();const r=await this.readline.ask(`reply to ${t} - [${c}]: `);r.length>0?(e.emit("txr-reply-to-chat-message",{user:t,replyMessage:r}),l.default.success(`Thanks, your reply was sent to ${t}!`)):await this.askToReply(t)},normal:{"txr-user-taken":function(){y(`The user you chose, ${c}, is already registered with the server. Please try another username.`)},"txr-user-registered-success":function(e){l.default.success(`Successfully registered name: ${e}. You are now listening for files.`)},"txr-file-permission":async function(t){delete t.user;const r=await(0,o.default)().ask(`\nSomeone wants to send you a file. Are you okay receiving a file with this data: ${JSON.stringify(t)} -- answer (yes/no): `);l.default.success(`You answered '${r}', we're letting the server and sender know now.`),e.emit("txr-file-permission-response",r)},"txr-receive-chat-message":async function({targetUser:e,message:t}){l.default.chatMessage(`[${e}]: ${t}`),await this.askToReply(e)},disconnect:function(){y("You were disconnected from the server.")}},stream:{"txr-file":function(e,t={}){delete t.user,l.default.success(`Starting to receive file with data: ${JSON.stringify(t)}`);const r=a.default.getFileName(t.filename||"txr.file"),i=s.default.join(u.default.filepath,s.default.basename(r)),o=n.default.createWriteStream(i);let c=0;e.on("data",e=>{c+=e.length,l.default.progress(".")}),e.on("error",e=>l.default.error(`\nError reading stream: ${e.toString()}`)),e.on("end",()=>{l.default.success(`\nFinished receiving file with data: ${JSON.stringify(t)}`),l.default.success(`Target file path: ${i}`)}),e.pipe(o)}}},send:{bytesTracker:0,dataForFileToSend:null,deleteFileAfterSend:!1,finalFilename:null,async exitGracefully(e=(()=>{})){this.deleteFileAfterSend&&await d(this.finalFilename),e(),v()},normal:{"txr-no-user":function(e){this.exitGracefully(()=>l.default.error(`No user registered with username: ${e.user}`))},"txr-file-permission-granted":function(){t(e).emit("txr-upload",r,this.dataForFileToSend)},"txr-file-permission-waiting":function(){l.default.success("Waiting for user to grant or reject receiving the file.")},"txr-file-permission-denied":function(){this.exitGracefully(()=>l.default.error("User did not grant permission to send file."))},"txr-file-data-hash-mismatch":function(){this.exitGracefully(()=>l.default.error("We can't validate the file you're sending."))},"txr-finished-uploading":function(){this.exitGracefully(()=>l.default.success(`Your file has successfully sent to ${c}!`))},disconnect:function(){this.exitGracefully(()=>l.default.error("You were disconnected from the server."))}},stream:{data:function(e){this.bytesTracker=this.bytesTracker+e.length,l.default.progress(".")},end:function(){l.default.success(`\nAll bytes have been read from file: ${this.finalFilename}.`)}}}}};var n=c(r(1)),s=c(r(4)),i=c(r(5)),a=c(r(6)),o=c(r(22)),l=c(r(7)),u=c(r(0));function c(e){return e&&e.__esModule?e:{default:e}}const d=(0,i.default)(n.default.unlink),f=e=>{l.default.error.bind(l.default)(e),process.exit()},h=process.exit},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e=process.stdin,t=process.stdout){return{rl:i.default.createInterface({input:e,output:t}),ask(e,t=!0){return new Promise((r,n)=>{this.rl.question(e,e=>{r(e),t&&this.close()})})},close(){this.rl.close()}}};var n,s=r(23),i=(n=s)&&n.__esModule?n:{default:n}},function(e,t){e.exports=require("readline")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function({socket:e,socketStream:t,writeStream:r,file:o,user:u,targetUser:c,host:d,logger:f,callback:h,reject:g,resolve:p}){return f=f||{debug:l,info:l},{reject:g,resolve:p,listen:{normal:{"txr-user-taken":function(){g(`The user you chose, ${u}, is already registered with the server. Please try another username.`)},disconnect:function(){g("You were disconnected from the server.")}},stream:{"txr-file":function(e,t={}){const r="function"==typeof h?h:p,o=i.default.getFileName(t.filename||"txr.file"),l=s.default.join(a.default.filepath,s.default.basename(o)),u=n.default.createWriteStream(l);let c=0;e.on("data",e=>{c+=e.length,f.debug(".")}),e.on("error",g),e.on("end",()=>r(l)),e.pipe(u)}}},send:{bytesTracker:0,dataForFileToSend:null,normal:{"txr-no-user":function(e){g(`No user registered with username: ${e.user}`)},"txr-file-permission-granted":function(){t(e).emit("txr-upload",r,this.dataForFileToSend)},"txr-file-permission-waiting":function(){f.info("Waiting for user to grant or reject receiving the file.")},"txr-file-permission-denied":function(){g("User did not grant permission to send file.")},"txr-file-data-hash-mismatch":function(){g("We can't validate the file you're sending.")},"txr-finished-uploading":function(){p(`Your file has successfully sent to ${u}!`)},disconnect:function(){g("You were disconnected from the server.")}},stream:{data:function(e){this.bytesTracker=this.bytesTracker+e.length,f.debug(".")},end:function(){f.info(`All bytes have been read from file: ${this.finalFilename}.`)}}}}};var n=o(r(1)),s=o(r(4)),i=o(r(6)),a=o(r(0));function o(e){return e&&e.__esModule?e:{default:e}}const l=()=>{}}]);