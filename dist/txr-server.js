#!/usr/bin/env node

!function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=3)}([function(e,t){e.exports=require("socket.io-stream")},function(e,t){e.exports=require("bunyan")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={filepath:process.env.TXR_PATH||process.env["win32"==process.platform?"USERPROFILE":"HOME"],server:{port:process.env.PORT||8e3,web_conc:process.env.WEB_CONCURRENCY||1,host:process.env.TXR_HOST||"http://txr.herokuapp.com"},logger:{options:{name:process.env.APP_NAME||"txr",level:process.env.LOGGING_LEVEL||"info",stream:process.stdout}}}},function(e,t,r){r(4),e.exports=r(5)},function(e,t){e.exports=require("babel-polyfill")},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}n(r(6)),n(r(7));var o=n(r(8)),i=n(r(9)),s=n(r(0)),u=n(r(1)),a=n(r(10)),c=n(r(11)),f=n(r(2)),l=u.default.createLogger(f.default.logger.options),d=(0,o.default)(process.argv.slice(2)),p=d.p||d.port||f.default.server.port;p=isNaN(p)?f.default.server.port:p;var m=(0,i.default)().listen(p);l.info("socket.io server listening on port: "+p),m.on("connection",function(e){l.info("got socket: "+e.id);var t=(0,s.default)(e),r=(0,a.default)(m,e,c.default);Object.keys(r.normal).forEach(function(t){return e.on(t,r.normal[t])}),Object.keys(r.stream).forEach(function(e){return t.on(e,r.stream[e])})})},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("minimist")},function(e,t){e.exports=require("socket.io")},function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){return{normal:{"regiser-listen":function(e){var n=e.auth,o=e.user;r.names[o]?(t.emit("user-taken",!0),u.error("User could not register name: "+o)):(r.names[o]=t.id,r.ids[t.id]=o,r.auth[t.id]=!!n,t.emit("user-registered-success",o),u.info("User successfully registered name: "+o))},"send-file-check-auth":function(n){var o=n.filename,i=n.filesizebytes,s=n.user,a=r.names[s],c=r.auth[a];if(s&&a){var f=e.sockets.connected[a];c?(t.emit("file-permission-waiting"),f.on("file-permission-response",function(e){"yes"===e.toLowerCase()?t.emit("file-permission-granted"):t.emit("file-permission-denied")}),f.emit("file-permission",{filename:o,filesizebytes:i,user:s})):t.emit("file-permission-granted")}else u.error("Tried to send a file to '"+s+"' who has not registered."),t.emit("no-user",{user:s})},disconnect:function(){u.info("socket disconnected: "+t.id);var e=r.ids[t.id];delete r.ids[t.id],delete r.auth[t.id],delete r.names[e]}},stream:{upload:function(n,o){u.info("Received 'upload' event with data: "+JSON.stringify(o));var s=o.user,a=r.names[s];if(s&&a){var c=e.sockets.connected[a],f=i.default.createStream();n.on("data",function(e){return u.info("Received "+e.length+" bytes of data.")}),n.on("error",function(e){return u.error("socket: "+t.id,e)}),n.on("end",function(){return u.info("Completed receiving file with data: "+JSON.stringify(o)+"!")}),f.on("end",function(){return t.emit("finished-uploading")}),n.pipe(f),(0,i.default)(c).emit("file",f,o)}else u.error("Tried to send a file to '"+s+"' who has not registered."),t.emit("no-user",{user:s})}}}};var o=n(r(1)),i=n(r(0)),s=n(r(2)),u=o.default.createLogger(s.default.logger.options)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={names:{},ids:{},auth:{}}}]);